[{"D:\\work-folders\\git-projects\\portfolio\\src\\index.js":"1","D:\\work-folders\\git-projects\\portfolio\\src\\components\\Footer.jsx":"2","D:\\work-folders\\git-projects\\portfolio\\src\\components\\Work.jsx":"3"},{"size":517,"mtime":1613919295390,"results":"4","hashOfConfig":"5"},{"size":1137,"mtime":1613919295376,"results":"6","hashOfConfig":"5"},{"size":2359,"mtime":1613923798720,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16eofp5",{"filePath":"10","messages":"11","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"D:\\work-folders\\git-projects\\portfolio\\src\\index.js",[],"D:\\work-folders\\git-projects\\portfolio\\src\\components\\Footer.jsx",["15","16","17","18","19"],"D:\\work-folders\\git-projects\\portfolio\\src\\components\\Work.jsx",["20","21","22"],"import React, { useEffect, useState } from 'react'\r\nimport { db } from '../utils/firebase'\r\nimport { getLinkPreview } from 'link-preview-js';\r\n\r\nexport default function Work() {\r\n    const images = require.context('../static/images/', true);\r\n    const [projects, setProjects] = useState([])\r\n    const imageContext = (path) => {\r\n        try {\r\n            let img = images(path);\r\n            return img.default\r\n        }\r\n        catch (err) {\r\n            return null\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        let result = []\r\n        db.collection(\"projects\").get().then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                let data = doc.data()\r\n                getLinkPreview(data.link, {\r\n                    imagesPropertyType: \"og\", // fetches only open-graph images\r\n                }).then(d => {\r\n                    let ogImage = d.favicons[0]\r\n                    if(data.nongit){\r\n                        ogImage = d.images[0]\r\n                    }\r\n                    data['thumbImage'] = ogImage\r\n                    data['refImage'] = ogImage\r\n                    result.push(data)\r\n                    console.log(d)\r\n                    setProjects([...result])\r\n                });\r\n            });\r\n        });\r\n    }, [0])\r\n    return (\r\n        <section id=\"two\">\r\n            <h2>Recent Work</h2>\r\n            <div className=\"row\" style={{ display: 'flex' }}>\r\n                {\r\n                    projects.map((item, index) => {\r\n                        return (\r\n                            <article style={{ order: item.order }} className=\"col-6 col-12-xsmall work-item\" key={index}>\r\n                                <a style={{ height: '200px' }} target=\"_blank\" href={item.link} className=\"image fit thumb\">\r\n                                    <img style={{ height: '100%' }} src={item.thumbImage} alt=\"\" />\r\n                                </a>\r\n                                <h3>{item.title}</h3>\r\n                                <p>{item.desc}</p>\r\n                            </article>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <ul className=\"actions\">\r\n                <li><a href=\"../static/resume.pdf\" target=\"_blank\" className=\"button\">Download Resume</a></li>\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n",{"ruleId":"23","severity":1,"message":"24","line":8,"column":28,"nodeType":"25","endLine":8,"endColumn":43},{"ruleId":"23","severity":1,"message":"24","line":9,"column":28,"nodeType":"25","endLine":9,"endColumn":43},{"ruleId":"26","severity":1,"message":"27","line":10,"column":25,"nodeType":"28","endLine":10,"endColumn":90},{"ruleId":"26","severity":1,"message":"27","line":11,"column":25,"nodeType":"28","endLine":11,"endColumn":88},{"ruleId":"26","severity":1,"message":"27","line":14,"column":36,"nodeType":"28","endLine":14,"endColumn":138},{"ruleId":"29","severity":1,"message":"30","line":8,"column":11,"nodeType":"31","messageId":"32","endLine":8,"endColumn":23},{"ruleId":"33","severity":1,"message":"34","line":37,"column":9,"nodeType":"35","endLine":37,"endColumn":10},{"ruleId":"23","severity":1,"message":"24","line":46,"column":64,"nodeType":"25","endLine":46,"endColumn":79},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'imageContext' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 0 literal is not a valid dependency because it never changes. You can safely remove it.","Literal"]